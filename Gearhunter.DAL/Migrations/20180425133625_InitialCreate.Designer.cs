// <auto-generated />
using GearHunter.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using Microsoft.EntityFrameworkCore.ValueGeneration;
using System;

namespace Gearhunter.DAL.Migrations
{
    [DbContext(typeof(GearHunterDbContext))]
    [Migration("20180425133625_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GearHunter.Core.Advertisement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("Brand");

                    b.Property<string>("CatchyHeader");

                    b.Property<int?>("CategoryId");

                    b.Property<string>("City");

                    b.Property<DateTime?>("Created");

                    b.Property<string>("Description");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeliverable");

                    b.Property<bool>("IsRentable");

                    b.Property<string>("Model");

                    b.Property<double>("Price");

                    b.Property<int?>("UserId");

                    b.Property<string>("Zip");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Advertisements");
                });

            modelBuilder.Entity("GearHunter.Core.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("GearHunter.Core.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AdvertisementId");

                    b.Property<string>("Filename");

                    b.HasKey("Id");

                    b.HasIndex("AdvertisementId");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("GearHunter.Core.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("City");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Email");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsAdmin");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<string>("Phone");

                    b.Property<string>("Zip");

                    b.Property<bool>("isValidated");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasDiscriminator<string>("Discriminator").HasValue("User");
                });

            modelBuilder.Entity("GearHunter.Core.Company", b =>
                {
                    b.HasBaseType("GearHunter.Core.User");

                    b.Property<string>("CVR");

                    b.ToTable("Company");

                    b.HasDiscriminator().HasValue("Company");
                });

            modelBuilder.Entity("GearHunter.Core.Individual", b =>
                {
                    b.HasBaseType("GearHunter.Core.User");


                    b.ToTable("Individual");

                    b.HasDiscriminator().HasValue("Individual");
                });

            modelBuilder.Entity("GearHunter.Core.Advertisement", b =>
                {
                    b.HasOne("GearHunter.Core.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.HasOne("GearHunter.Core.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("GearHunter.Core.Photo", b =>
                {
                    b.HasOne("GearHunter.Core.Advertisement")
                        .WithMany("Photos")
                        .HasForeignKey("AdvertisementId");
                });
#pragma warning restore 612, 618
        }
    }
}
